buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 24
    buildToolsVersion "24.0.1"

    def versionPropsFile = file('../version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def vCode = versionProps['VERSION_CODE'].toInteger()
        def vName = versionProps['VERSION_NAME']
        println "Building versionCode:" + vCode + " and versionName:" + vName

        defaultConfig {
            applicationId "in.sportscafe.nostragamus"
            minSdkVersion 19
            targetSdkVersion 23
            versionCode vCode
            versionName vName
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }

    signingConfigs {
        release {
            keyAlias 'nostragamus'
            keyPassword 'nostragamus'
            storeFile file('nostragamus.jks')
            storePassword 'nostragamus'
        }
    }

    buildTypes {
        release {
            multiDexEnabled true
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
    }

    productFlavors {
        local {
            resValue "string", "app_name", "Nostragamus"
        }
        stage {
            resValue "string", "app_name", "Nostragamus"
        }
        production {
            resValue "string", "app_name", "Nostragamus"
        }
        dev {
            resValue "string", "app_name", "Nostragamus Dev"
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile project(':jeevalibrary')
    // To track the events, in-app messaging and geo fencing
    // To push the notification from server to application
    compile 'com.google.android.gms:play-services-auth:9.4.0'
    compile 'com.moengage:moe-android-sdk:7.2.01'
    compile 'com.moengage:addon-inbox:2.8.0'
    compile 'com.google.android.gms:play-services-gcm:9.4.0'
//    compile 'com.github.devlight.navigationtabstrip:navigationtabstrip:1.0.4'
//    compile 'com.bignerdranch.android:expandablerecyclerview:2.1.1'
    // To track the install counts, events, crashes and acquisition
    compile 'com.google.android.gms:play-services-analytics:9.4.0'
    // To track the fatal and non-fatal errors from the application
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }
    // To compat for new material designs
    compile 'com.android.support:cardview-v7:24.2.1'
    compile('io.branch.sdk.android:library:2.5.1@aar') {
        transitive = true;
    }
    compile('io.fabric.sdk.android:fabric:1.3.10@aar') {
        transitive = true;
    }
    compile 'com.google.android.gms:play-services-appindexing:9.4.0'
    compile 'com.amplitude:android-sdk:2.12.0'
    // To use parcelable instead serializable to improve data transfer between components
    compile 'org.parceler:parceler-api:1.1.5'
    apt 'org.parceler:parceler:1.1.5'
}
apply plugin: 'com.google.gms.google-services'
